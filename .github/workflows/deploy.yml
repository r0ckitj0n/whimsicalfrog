name: Deploy

on:
  workflow_dispatch:
    inputs:
      ref:
        description: "Git ref to deploy (branch or tag)"
        required: false
        default: "main"
  push:
    branches:
      - main
    paths-ignore:
      - 'documentation/**'
      - '*.md'
      - '**/*.md'

permissions:
  contents: read
  deployments: write

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: false

env:
  SSH_ALIAS: github.com-whf
  REPO: r0ckitj0n/whimsicalfrog

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://whimsicalfrog.us/
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Checkout (read-only)
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO }}
          ref: ${{ github.event.inputs.ref || github.ref }}
          fetch-depth: 1

      - name: Setup SSH alias (least-privilege key)
        uses: ./.github/actions/setup-ssh-alias
        with:
          ssh-private-key: ${{ secrets.WHF_DEPLOY_KEY }}
          ssh-alias: ${{ env.SSH_ALIAS }}
          ssh-host: github.com
          ssh-key-path: ~/.ssh/whf_deploy_key

      - name: Verify repo access via alias (ls-remote)
        run: |
          set -euo pipefail
          git ls-remote git@${{ env.SSH_ALIAS }}:${{ env.REPO }} HEAD | tee /tmp/lsremote.txt
          test -s /tmp/lsremote.txt

      - name: Build (placeholder)
        run: |
          set -euo pipefail
          npm ci
          npm run build --if-present

      - name: Install lftp
        run: |
          sudo apt-get update -y
          sudo apt-get install -y lftp

      - name: Deploy (SFTP mirror with lftp)
        shell: bash
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_PASS: ${{ secrets.DEPLOY_PASS }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: |
          set -euo pipefail
          : "${DEPLOY_HOST:?Missing DEPLOY_HOST}"
          : "${DEPLOY_USER:?Missing DEPLOY_USER}"
          : "${DEPLOY_PASS:?Missing DEPLOY_PASS}"
          : "${DEPLOY_PATH:?Missing DEPLOY_PATH}"
          test -d dist || { echo "::error::dist/ not found; ensure build step produced artifacts" >&2; exit 1; }
          printf '%s\n' \
            'set sftp:auto-confirm yes' \
            'set ssl:verify-certificate no' \
            'set cmd:fail-exit yes' \
            "open sftp://$DEPLOY_USER:$DEPLOY_PASS@$DEPLOY_HOST" \
            "mkdir -p $DEPLOY_PATH/dist || true" \
            "mirror --reverse --delete --verbose --only-newer --ignore-time --no-perms dist $DEPLOY_PATH/dist" \
            'bye' > deploy_sftp.txt
          lftp -f deploy_sftp.txt
          rm -f deploy_sftp.txt
