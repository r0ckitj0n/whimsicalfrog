# Use lint-staged to process only staged files (concurrent for speed)
# Auto-quarantine duplicate-suffixed files/dirs being committed
# Examples auto-quenched: "image 2.png", "logo 3.webp", "css/core 2/", "foo.bak"

# Collect staged paths
STAGED=$(git diff --cached --name-only -z)
# Auto-quarantine: move staged offenders to backups/duplicates/ preserving relative paths
printf "%s" "$STAGED" | tr '\0' '\n' | while IFS= read -r path; do
  [ -z "$path" ] && continue
  case "$path" in backups/duplicates/*) continue ;; esac
  # If any segment ends with space+digit OR file ends with .bak
  if printf "%s" "$path" | grep -E '(^|/).+ [0-9]($|/|\.)' >/dev/null || printf "%s" "$path" | grep -Ei '\\.bak$' >/dev/null; then
    dest="backups/duplicates/$path"
    mkdir -p "$(dirname "$dest")"
    # Try git mv if path exists in worktree; else skip
    if [ -e "$path" ] || [ -L "$path" ]; then
      git mv -v -- "$path" "$dest" || mv -v -- "$path" "$dest"
      # Ensure destination is staged
      git add -f -- "$dest" 2>/dev/null || true
    fi
  fi
done

npm run guard:images || exit 1
npm run audit:images:code || exit 1

npx lint-staged --concurrent=true
