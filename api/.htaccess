# Security hardening for the /api directory
# -----------------------------------------------------------------------------
# 1. Disable directory listing so visitors cannot browse file structure.
Options -Indexes

# 2. Protect this very file from outside access.
<Files .htaccess>
  Require all denied
</Files>

# 3. Block access to common sensitive file types
<FilesMatch "\.(?:bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist|md|json|yml?|env)$">
  Require all denied
</FilesMatch>

# 4. API endpoints should be accessible but have their own authentication
#    Allow access to PHP files but rely on PHP-level authentication

# 5. Set security headers for API responses
<IfModule mod_headers.c>
    Header always set X-Content-Type-Options nosniff
    Header always set X-Frame-Options DENY
    Header always set X-XSS-Protection "1; mode=block"
</IfModule>

# 6. Backward-compatibility URL rewrites for legacy hyphenated endpoints
#    Map requests like add-order.php -> add_order.php
<IfModule mod_rewrite.c>
    RewriteEngine On
    # Only rewrite if the requested file does not already exist
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteRule ^add-order\.php$ add_order.php [L]
    RewriteRule ^add-inventory\.php$ add_inventory.php [L]
    RewriteRule ^delete-customer\.php$ delete_customer.php [L]
    RewriteRule ^delete-inventory\.php$ delete_inventory.php [L]
    RewriteRule ^delete-order\.php$ delete_order.php [L]
    RewriteRule ^inventory-costs\.php$ inventory_costs.php [L]
    RewriteRule ^next-order-item-id\.php$ next_order_item_id.php [L]
    RewriteRule ^update-inventory\.php$ update_inventory.php [L]
    RewriteRule ^update-inventory-field\.php$ update_inventory_field.php [L]
    RewriteRule ^update-inventory-stock\.php$ update_inventory_stock.php [L]
    RewriteRule ^update-order\.php$ update_order.php [L]
    RewriteRule ^update-payment-status\.php$ update_payment_status.php [L]
    RewriteRule ^update-user\.php$ update_user.php [L]
</IfModule>

# End /api/.htaccess
