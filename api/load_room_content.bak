<?php
/**
 * Load Room Content API
 *
 * Loads room content for display in modal overlay
 * Returns HTML content for rooms 2-6 based on room_template.php
 */

require_once __DIR__ . '/config.php';
require_once __DIR__ . '/../includes/functions.php';

// Set headers
header('Content-Type: application/json');
header('Access-Control-Allow-Origin: *');
header('Access-Control-Allow-Methods: GET, POST, OPTIONS');
header('Access-Control-Allow-Headers: Content-Type');

// Handle preflight requests
if ($_SERVER['REQUEST_METHOD'] === 'OPTIONS') {
    http_response_code(200);
    exit();
}

// Only allow GET requests
if ($_SERVER['REQUEST_METHOD'] !== 'GET') {
    echo json_encode(['success' => false, 'message' => 'Only GET requests allowed']);
    exit();
}

// Get room number from query parameters
$roomNumber = isset($_GET['room_number']) ? $_GET['room_number'] : 'A';
$isModal = isset($_GET['modal']) ? true : false;

// Load room helpers for dynamic validation
require_once __DIR__ . '/room_helpers.php';

// Validate room number dynamically
if (!isValidRoom($lookupRoomNumber)) {
    echo json_encode(['success' => false, 'message' => 'Invalid room number.']);
    exit();
}

try {
    // Get database connection
    $pdo = Database::getInstance();

    // Generate room content HTML
    $roomContent = generateRoomContent($roomNumber, $pdo, $isModal);

    // Also get room metadata for the modal
    $roomMetadata = getRoomMetadata($roomNumber, $pdo);

    echo json_encode([
        'success' => true,
        'content' => $roomContent,
        'room_number' => $roomNumber,
        'metadata' => $roomMetadata,
        'is_modal' => $isModal
    ]);

} catch (Exception $e) {
    error_log("Error loading room content: " . $e->getMessage());
    echo json_encode([
        'success' => false,
        'message' => 'Failed to load room content: ' . $e->getMessage()
    ]);
}

/**
 * Generate room content HTML
 */
function generateRoomContent($roomNumber, $pdo, $isModal = false)
{
    // Determine lookup room number (legacy assignments: UI 1-5 map to DB 2-6)
    $lookupRoomNumber = is_numeric($roomNumber) ? $roomNumber + 1 : $roomNumber;
    $roomType = "room{$lookupRoomNumber}";

    // Initialize defaults
    $roomItems = [];
    $roomCategoryName = '';

    try {
        // Fetch primary category assignment
        $stmt = $pdo->prepare(
            "SELECT rca.*, c.name, c.description, c.id AS category_id
             FROM room_category_assignments rca
             JOIN categories c ON rca.category_id = c.id
             WHERE rca.room_number = ? AND rca.is_primary = 1
             LIMIT 1"
        );
        $stmt->execute([$lookupRoomNumber]);
        $primaryCategory = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($primaryCategory) {
            $roomCategoryName = $primaryCategory['name'];
            // Fetch items for this category
            $stmt = $pdo->prepare(
                "SELECT i.*, img.image_path AS image_path, img.is_primary, img.alt_text
                 FROM items i
                 LEFT JOIN item_images img ON i.sku = img.sku AND img.is_primary = 1
                 WHERE i.category_id = ?
                 ORDER BY i.sku ASC"
            );
            $stmt->execute([$primaryCategory['category_id']]);
            $roomItems = $stmt->fetchAll(PDO::FETCH_ASSOC);
        }

        // Fetch room settings
        $stmt = $pdo->prepare("SELECT * FROM room_settings WHERE room_number = ?");
        $stmt->execute([$lookupRoomNumber]);
        $roomSettings = $stmt->fetch(PDO::FETCH_ASSOC);

        $seoData = [
            'title' => $roomSettings['room_name'] ?? "Room {$roomNumber}",
            'description' => $roomSettings['description'] ?? '',
            'category' => $roomCategoryName
        ];
    } catch (Exception $e) {
        error_log("Error in generateRoomContent: {$e->getMessage()}");
        $seoData = [ 'title' => "Room {$roomNumber}", 'description' => '', 'category' => '' ];
    }

    // Load room coordinates for placement
    $coordinateData = loadRoomCoordinates($roomType, $pdo);
    $coords = $coordinateData['coordinates'] ?? [];

    // Build HTML
    ob_start();
    ?>
    <div id="modalRoomPage" class="modal-room-page" data-room="<?php echo $roomNumber; ?>">
        <div class="room-modal-iframe-container room-bg-<?php echo $roomType; ?>">
            <div class="room-overlay-wrapper room-modal-content-wrapper">
                <div id="debug-items-count">Items count: <?php echo count($roomItems); ?></div>

                <?php foreach ($roomItems as $index => $item): 
                    $iconIndex = $index + 1;
                    $coordinate = $coords[$index] ?? ['top'=>0,'left'=>0,'width'=>80,'height'=>80];
                ?>
                <div id="item-icon-<?php echo $index; ?>" class="room-product-icon area-<?php echo $iconIndex; ?>"
                     style="position:absolute; top:<?php echo $coordinate['top']; ?>px;
                            left:<?php echo $coordinate['left']; ?>px;
                            width:<?php echo $coordinate['width']; ?>px;
                            height:<?php echo $coordinate['height']; ?>px;">
                    <picture>
                        <source srcset="<?php echo getImageUrl($item['image_path'] ?? '', 'items'); ?>" type="image/webp">
                        <img src="<?php echo getImageUrl($item['image_path'] ?? '', 'items','png'); ?>"
                             alt="<?php echo htmlspecialchars($item['name'] ?? 'Product'); ?>"
                             class="room-product-icon-img">
                    </picture>
                </div>
                <?php endforeach; ?>

            </div>
        </div>
    </div>
    <?php
    return ob_get_clean();
}

/**
 * Load room coordinates from database
 */
function loadRoomCoordinates($roomType, $pdo)
{
    try {
        $stmt = $pdo->prepare("
            SELECT * FROM room_maps 
            WHERE room_type = ? AND is_active = 1 
            ORDER BY updated_at DESC 
            LIMIT 1
        ");
        $stmt->execute([$roomType]);
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        // Fallback: try underscore format room_<number> if no result
        if (!$result && preg_match('/^room(\d+)$/', $roomType, $m)) {
            $altType = 'room_' . $m[1];
            $stmt->execute([$altType]);
            $result = $stmt->fetch(PDO::FETCH_ASSOC);
        }

        if ($result) {
            return [
                'coordinates' => json_decode($result['coordinates'], true),
                'originalImageWidth' => 1280,
                'originalImageHeight' => 896
            ];
        }
    } catch (Exception $e) {
        error_log("Error loading room coordinates: " . $e->getMessage());
    }

    // Return empty coordinates if no data found
    return [
        'coordinates' => [],
        'originalImageWidth' => 1280,
        'originalImageHeight' => 896
    ];
}

/**
 * Get room metadata for modal display
 */
function getRoomMetadata($roomNumber, $pdo)
{
    // Determine lookup room number (legacy assignments are off by +1)
    $lookupRoomNumber = is_numeric($roomNumber) ? $roomNumber + 1 : $roomNumber;
    error_log("LoadRoomMetadata Debug: roomNumber={$roomNumber}, lookupRoomNumber={$lookupRoomNumber}");
    try {
        // Get room settings
        $stmt = $pdo->prepare("SELECT * FROM room_settings WHERE room_number = ?");
        $stmt->execute([$lookupRoomNumber]);
        $roomSettings = $stmt->fetch(PDO::FETCH_ASSOC);

        // Get primary category
        $stmt = $pdo->prepare("
            SELECT c.name as category_name, c.description as category_description
            FROM room_category_assignments rca 
            JOIN categories c ON rca.category_id = c.id 
            WHERE rca.room_number = ? AND rca.is_primary = 1
            LIMIT 1
        ");
        $stmt->execute([$lookupRoomNumber]);
        $primaryCategory = $stmt->fetch(PDO::FETCH_ASSOC);

        return [
            'room_name' => $roomSettings['room_name'] ?? "Room {$roomNumber}",
            'description' => $roomSettings['description'] ?? '',
            'door_label' => $roomSettings['door_label'] ?? '',
            'category_name' => $primaryCategory['category_name'] ?? '',
            'category_description' => $primaryCategory['category_description'] ?? ''
        ];

    } catch (Exception $e) {
        error_log("Error getting room metadata: " . $e->getMessage());
        return [
            'room_name' => "Room {$roomNumber}",
            'description' => '',
            'door_label' => '',
            'category_name' => '',
            'category_description' => ''
        ];
    }
}

/**
 * Helper function to get image URL with fallback
 */
function getImageUrl($imagePath, $directory, $extension = 'webp')
{
    if (empty($imagePath)) {
        return "/images/{$directory}/placeholder.{$extension}";
    }

    // If path already includes directory, use as-is
    if (strpos($imagePath, "{$directory}/") !== false) {
        return '/' . ltrim($imagePath, '/');
    }

    // Add directory prefix
    return "/images/{$directory}/" . $imagePath;
}
?> 