document.addEventListener("DOMContentLoaded",()=>{const d=document.getElementById("categoryTableBody"),l=document.getElementById("addCategoryForm"),a=(e,t)=>window.showGlobalNotification?.(e,t),i=(e,t)=>window.Logger?.error(e,t);l&&l.addEventListener("submit",async e=>{e.preventDefault();const o=document.getElementById("newCategory").value.trim();if(!o)return;const r=e.target.querySelector('button[type="submit"]'),n=r.textContent;r.textContent="Adding...",r.disabled=!0;try{const y=await(await fetch("/api/categories",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({action:"create",category:o})})).json();y.success?location.reload():a(y.error||"Failed to add category","error")}catch(s){i("Category add failed",s),a("Server error occurred","error")}finally{r.textContent=n,r.disabled=!1}}),d&&d.addEventListener("click",e=>{e.target.closest(".delete-category-btn")?u(e.target.closest(".delete-category-btn")):e.target.closest(".editable-field")&&!e.target.closest(".editing")&&g(e.target.closest(".editable-field"))});async function u(e){const t=e.dataset.category;if(!confirm(`Delete category "${t}"?

This will remove the category from all products and update the SKU naming scheme.
This action cannot be undone.`))return;const o=e.innerHTML;e.innerHTML="‚è≥",e.disabled=!0;try{const n=await(await fetch("/api/categories",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({action:"delete",category:t})})).json();n.success?(e.closest("tr").remove(),a(`Category "${t}" deleted.`,"success"),localStorage.setItem("categoriesUpdated",Date.now().toString())):a(n.error||"Failed to delete category","error")}catch(r){i("Category delete failed",r),a("Server error occurred","error")}finally{e.innerHTML=o,e.disabled=!1}}function g(e){if(document.querySelector(".editing"))return;const t=e.dataset.original;e.classList.add("editing"),e.innerHTML=`<input type="text" class="form-input category-edit-input" value="${t}">`;const o=e.querySelector("input");o.focus(),o.select();const r=n=>{n.type==="blur"||n.key==="Enter"?f(o,e,t):n.key==="Escape"&&c(e,t)};o.addEventListener("blur",r),o.addEventListener("keydown",r)}function c(e,t){e.innerHTML=t,e.classList.remove("editing")}async function f(e,t,o){const r=e.value.trim();if(e.replaceWith(document.createTextNode(r)),!r||r===o){c(t,o);return}t.innerHTML="Saving...";try{const s=await(await fetch("/api/categories",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({action:"rename",category:o,newCategory:r})})).json();s.success?(a(`Category renamed to "${r}".`,"success"),location.reload()):(a(s.error||"Failed to rename category","error"),c(t,o))}catch(n){i("Category rename failed",n),a("Server error occurred","error"),c(t,o)}}});
