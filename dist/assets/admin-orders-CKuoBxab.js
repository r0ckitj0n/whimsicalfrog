class a{constructor(){this.orderData={},this.allItems=[],this.modalMode=null,this.currentOrderId=null,this.loadData(),this.bindEvents()}loadData(){const e=document.getElementById("order-page-data");if(e){const t=JSON.parse(e.textContent);this.orderData=t.orderData||{},this.allItems=t.allItems||[],this.modalMode=t.modalMode,this.currentOrderId=t.currentOrderId}}bindEvents(){document.body.addEventListener("click",this.handleDelegatedClick.bind(this)),document.addEventListener("DOMContentLoaded",()=>{this.initInlineEditing(),this.initModal()})}handleDelegatedClick(e){const t=e.target.closest("[data-action]");if(!t)return;switch(t.dataset.action){case"confirm-delete":this.confirmDelete(t.dataset.orderId);break;case"close-delete-modal":this.closeDeleteModal();break;case"delete-order":this.deleteOrder();break;case"show-add-item-modal":this.showAddItemModal();break;case"add-item-to-order":this.addItemToOrder(t.dataset.sku,t.dataset.name,t.dataset.price);break;case"remove-item-from-order":this.removeItemFromOrder(t.dataset.itemId);break;case"impersonate-customer":this.impersonateCustomer(t.dataset.userId);break;case"close-modal":const d=e.target.closest(".modal-overlay");d&&(d.style.display="none");break}}initModal(){const e=document.getElementById("orderModal");this.modalMode&&e&&(e.style.display="flex")}confirmDelete(e){const t=document.getElementById("deleteConfirmModal"),o=document.getElementById("delete_order_id");t&&o&&(o.value=e,t.style.display="flex")}closeDeleteModal(){const e=document.getElementById("deleteConfirmModal");e&&(e.style.display="none")}async deleteOrder(){const e=document.getElementById("delete_order_id");if(!e||!e.value)return;const t=e.closest("form");t&&t.submit()}showAddItemModal(){const e=document.getElementById("addItemModal");e&&(e.style.display="flex")}async addItemToOrder(e,t,o){const d=prompt(`Enter quantity for ${t}:`,"1");!d||isNaN(d)||Number(d)<=0||(console.log(`Adding ${d} of ${e} to order ${this.currentOrderId}`),alert("Item adding logic not fully implemented in JS module yet. Reload to see changes if backend is updated."))}async removeItemFromOrder(e){confirm("Are you sure you want to remove this item?")&&(console.log(`Removing item ${e} from order ${this.currentOrderId}`),alert("Item removal logic not fully implemented in JS module yet. Reload to see changes if backend is updated."))}impersonateCustomer(e){confirm("Are you sure you want to impersonate this customer?")&&(window.location.href=`/?impersonate=${e}`)}initInlineEditing(){console.log("Inline editing initialization logic goes here.")}}new a;
