function w(e){return typeof e!="string"||e.startsWith("http://")||e.startsWith("https://")||e.startsWith("/")?e:`/api/${e}`}class l{static async request(t,i={}){const s={"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest"};let n=i.credentials;try{const u=new URL(t,window.location.origin),d=u.origin===window.location.origin,c=typeof t=="string"&&t.startsWith("/"),p=typeof window<"u"&&window.__WF_BACKEND_ORIGIN?String(window.__WF_BACKEND_ORIGIN):null,_=!!p&&u.origin===p;n||(n=d||c||_?"include":"same-origin")}catch{n=n||"same-origin"}const r={headers:{...s,...i.headers||{}},credentials:n,...i},o=await fetch(t,r);if(!o.ok)throw new Error(`HTTP ${o.status}: ${o.statusText}`);const a=o.headers.get("content-type")||"",f=a.includes("application/json");if(o.status===204||!a)return null;if(f){const d=(await o.text()||"").trim();if(!d)return{};let c;try{c=JSON.parse(d)}catch{throw console.warn("[ApiClient] Invalid JSON response",{url:t,snippet:d.slice(0,200)}),new Error("Invalid JSON response from server.")}if(c&&c.success===!1)throw new Error(c.error||"API request failed");return c}return o.text()}static get(t,i={}){const s=w(t),n=typeof window<"u"&&window.__WF_BACKEND_ORIGIN?String(window.__WF_BACKEND_ORIGIN):null,r=typeof s=="string"&&s.startsWith("/")&&n?n:window.location.origin,o=new URL(s,r);return Object.keys(i).forEach(a=>{i[a]!==null&&i[a]!==void 0&&o.searchParams.append(a,i[a])}),this.request(o.toString(),{method:"GET"})}static post(t,i={},s={}){const n=w(t),r=typeof window<"u"&&window.__WF_BACKEND_ORIGIN?String(window.__WF_BACKEND_ORIGIN):null,o=typeof n=="string"&&n.startsWith("/")&&r?r:window.location.origin,a=new URL(n,o).toString();return this.request(a,{method:"POST",body:JSON.stringify(i),...s})}static put(t,i={},s={}){const n=w(t),r=typeof window<"u"&&window.__WF_BACKEND_ORIGIN?String(window.__WF_BACKEND_ORIGIN):null,o=typeof n=="string"&&n.startsWith("/")&&r?r:window.location.origin,a=new URL(n,o).toString();return this.request(a,{method:"PUT",body:JSON.stringify(i),...s})}static delete(t,i={}){const s=w(t),n=typeof window<"u"&&window.__WF_BACKEND_ORIGIN?String(window.__WF_BACKEND_ORIGIN):null,r=typeof s=="string"&&s.startsWith("/")&&n?n:window.location.origin,o=new URL(s,r).toString();return this.request(o,{method:"DELETE",...i})}static upload(t,i,s={}){const n=w(t),r=typeof window<"u"&&window.__WF_BACKEND_ORIGIN?String(window.__WF_BACKEND_ORIGIN):null,o=typeof n=="string"&&n.startsWith("/")&&r?r:window.location.origin,a=new URL(n,o).toString();return this.request(a,{method:"POST",body:i,headers:{},...s})}}const g=(e,t)=>l.get(e,t),h=(e,t,i)=>l.post(e,t,i),N=(e,t,i)=>l.put(e,t,i),O=(e,t)=>l.delete(e,t),I=(e,t,i)=>l.upload(e,t,i);if(window?.location?.hostname==="localhost"||window?.location?.hostname.includes("dev")){const e=window.fetch;window.fetch=function(...t){return typeof t[0]=="string"&&t[0].includes("/api/")&&(console.warn("⚠️  Consider using ApiClient instead of direct fetch for API calls:",t[0]),console.warn(`Example: apiGet("${t[0]}") or apiPost("${t[0]}", data)`)),e.apply(this,t)}}export{l as A,O as a,N as b,h as c,g as d,I as u};
